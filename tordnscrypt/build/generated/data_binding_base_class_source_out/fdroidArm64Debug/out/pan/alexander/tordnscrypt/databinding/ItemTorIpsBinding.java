// Generated by view binder compiler. Do not edit!
package pan.alexander.tordnscrypt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageButton;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.appcompat.widget.SwitchCompat;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import pan.alexander.tordnscrypt.R;

public final class ItemTorIpsBinding implements ViewBinding {
  @NonNull
  private final LinearLayoutCompat rootView;

  @NonNull
  public final CardView cardHostIP;

  @NonNull
  public final View divider;

  @NonNull
  public final AppCompatImageButton imbtnTorItem;

  @NonNull
  public final LinearLayoutCompat llHostIP;

  @NonNull
  public final LinearLayoutCompat llHostIPRoot;

  @NonNull
  public final SwitchCompat swTorItem;

  @NonNull
  public final AppCompatTextView tvTorItemHost;

  @NonNull
  public final AppCompatTextView tvTorItemIP;

  private ItemTorIpsBinding(@NonNull LinearLayoutCompat rootView, @NonNull CardView cardHostIP,
      @NonNull View divider, @NonNull AppCompatImageButton imbtnTorItem,
      @NonNull LinearLayoutCompat llHostIP, @NonNull LinearLayoutCompat llHostIPRoot,
      @NonNull SwitchCompat swTorItem, @NonNull AppCompatTextView tvTorItemHost,
      @NonNull AppCompatTextView tvTorItemIP) {
    this.rootView = rootView;
    this.cardHostIP = cardHostIP;
    this.divider = divider;
    this.imbtnTorItem = imbtnTorItem;
    this.llHostIP = llHostIP;
    this.llHostIPRoot = llHostIPRoot;
    this.swTorItem = swTorItem;
    this.tvTorItemHost = tvTorItemHost;
    this.tvTorItemIP = tvTorItemIP;
  }

  @Override
  @NonNull
  public LinearLayoutCompat getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemTorIpsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemTorIpsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_tor_ips, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemTorIpsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardHostIP;
      CardView cardHostIP = rootView.findViewById(id);
      if (cardHostIP == null) {
        break missingId;
      }

      id = R.id.divider;
      View divider = rootView.findViewById(id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.imbtnTorItem;
      AppCompatImageButton imbtnTorItem = rootView.findViewById(id);
      if (imbtnTorItem == null) {
        break missingId;
      }

      id = R.id.llHostIP;
      LinearLayoutCompat llHostIP = rootView.findViewById(id);
      if (llHostIP == null) {
        break missingId;
      }

      LinearLayoutCompat llHostIPRoot = (LinearLayoutCompat) rootView;

      id = R.id.swTorItem;
      SwitchCompat swTorItem = rootView.findViewById(id);
      if (swTorItem == null) {
        break missingId;
      }

      id = R.id.tvTorItemHost;
      AppCompatTextView tvTorItemHost = rootView.findViewById(id);
      if (tvTorItemHost == null) {
        break missingId;
      }

      id = R.id.tvTorItemIP;
      AppCompatTextView tvTorItemIP = rootView.findViewById(id);
      if (tvTorItemIP == null) {
        break missingId;
      }

      return new ItemTorIpsBinding((LinearLayoutCompat) rootView, cardHostIP, divider, imbtnTorItem,
          llHostIP, llHostIPRoot, swTorItem, tvTorItemHost, tvTorItemIP);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
