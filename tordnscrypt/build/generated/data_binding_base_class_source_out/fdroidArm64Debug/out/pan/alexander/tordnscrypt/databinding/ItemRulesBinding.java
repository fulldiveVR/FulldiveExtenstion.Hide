// Generated by view binder compiler. Do not edit!
package pan.alexander.tordnscrypt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.appcompat.widget.AppCompatImageButton;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.appcompat.widget.SwitchCompat;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import pan.alexander.tordnscrypt.R;

public final class ItemRulesBinding implements ViewBinding {
  @NonNull
  private final LinearLayoutCompat rootView;

  @NonNull
  public final CardView cardRules;

  @NonNull
  public final AppCompatImageButton delBtnRules;

  @NonNull
  public final AppCompatEditText etRule;

  @NonNull
  public final LinearLayoutCompat llRules;

  @NonNull
  public final SwitchCompat swRuleActive;

  private ItemRulesBinding(@NonNull LinearLayoutCompat rootView, @NonNull CardView cardRules,
      @NonNull AppCompatImageButton delBtnRules, @NonNull AppCompatEditText etRule,
      @NonNull LinearLayoutCompat llRules, @NonNull SwitchCompat swRuleActive) {
    this.rootView = rootView;
    this.cardRules = cardRules;
    this.delBtnRules = delBtnRules;
    this.etRule = etRule;
    this.llRules = llRules;
    this.swRuleActive = swRuleActive;
  }

  @Override
  @NonNull
  public LinearLayoutCompat getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemRulesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemRulesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_rules, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemRulesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardRules;
      CardView cardRules = rootView.findViewById(id);
      if (cardRules == null) {
        break missingId;
      }

      id = R.id.delBtnRules;
      AppCompatImageButton delBtnRules = rootView.findViewById(id);
      if (delBtnRules == null) {
        break missingId;
      }

      id = R.id.etRule;
      AppCompatEditText etRule = rootView.findViewById(id);
      if (etRule == null) {
        break missingId;
      }

      LinearLayoutCompat llRules = (LinearLayoutCompat) rootView;

      id = R.id.swRuleActive;
      SwitchCompat swRuleActive = rootView.findViewById(id);
      if (swRuleActive == null) {
        break missingId;
      }

      return new ItemRulesBinding((LinearLayoutCompat) rootView, cardRules, delBtnRules, etRule,
          llRules, swRuleActive);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
