// Generated by view binder compiler. Do not edit!
package pan.alexander.tordnscrypt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageButton;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.appcompat.widget.SearchView;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import pan.alexander.tordnscrypt.R;

public final class FragmentPreferencesDnscryptServersRvBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final CardView cardSearchDNSServer;

  @NonNull
  public final AppCompatImageButton ibAddOwnServer;

  @NonNull
  public final LinearLayoutCompat linearLayout4;

  @NonNull
  public final RecyclerView rvDNSServers;

  @NonNull
  public final SearchView searchDNSServer;

  private FragmentPreferencesDnscryptServersRvBinding(@NonNull FrameLayout rootView,
      @NonNull CardView cardSearchDNSServer, @NonNull AppCompatImageButton ibAddOwnServer,
      @NonNull LinearLayoutCompat linearLayout4, @NonNull RecyclerView rvDNSServers,
      @NonNull SearchView searchDNSServer) {
    this.rootView = rootView;
    this.cardSearchDNSServer = cardSearchDNSServer;
    this.ibAddOwnServer = ibAddOwnServer;
    this.linearLayout4 = linearLayout4;
    this.rvDNSServers = rvDNSServers;
    this.searchDNSServer = searchDNSServer;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPreferencesDnscryptServersRvBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPreferencesDnscryptServersRvBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_preferences_dnscrypt_servers_rv, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPreferencesDnscryptServersRvBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardSearchDNSServer;
      CardView cardSearchDNSServer = rootView.findViewById(id);
      if (cardSearchDNSServer == null) {
        break missingId;
      }

      id = R.id.ibAddOwnServer;
      AppCompatImageButton ibAddOwnServer = rootView.findViewById(id);
      if (ibAddOwnServer == null) {
        break missingId;
      }

      id = R.id.linearLayout4;
      LinearLayoutCompat linearLayout4 = rootView.findViewById(id);
      if (linearLayout4 == null) {
        break missingId;
      }

      id = R.id.rvDNSServers;
      RecyclerView rvDNSServers = rootView.findViewById(id);
      if (rvDNSServers == null) {
        break missingId;
      }

      id = R.id.searchDNSServer;
      SearchView searchDNSServer = rootView.findViewById(id);
      if (searchDNSServer == null) {
        break missingId;
      }

      return new FragmentPreferencesDnscryptServersRvBinding((FrameLayout) rootView,
          cardSearchDNSServer, ibAddOwnServer, linearLayout4, rvDNSServers, searchDNSServer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
