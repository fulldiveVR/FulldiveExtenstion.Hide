// Generated by view binder compiler. Do not edit!
package pan.alexander.tordnscrypt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatCheckBox;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import pan.alexander.tordnscrypt.R;

public final class ItemDnsRelayBinding implements ViewBinding {
  @NonNull
  private final LinearLayoutCompat rootView;

  @NonNull
  public final CardView cardDNSRelay;

  @NonNull
  public final AppCompatCheckBox chbDNSRelay;

  @NonNull
  public final LinearLayoutCompat llDNSRelay;

  @NonNull
  public final AppCompatTextView tvDNSRelayDescription;

  @NonNull
  public final AppCompatTextView tvDNSRelayName;

  private ItemDnsRelayBinding(@NonNull LinearLayoutCompat rootView, @NonNull CardView cardDNSRelay,
      @NonNull AppCompatCheckBox chbDNSRelay, @NonNull LinearLayoutCompat llDNSRelay,
      @NonNull AppCompatTextView tvDNSRelayDescription, @NonNull AppCompatTextView tvDNSRelayName) {
    this.rootView = rootView;
    this.cardDNSRelay = cardDNSRelay;
    this.chbDNSRelay = chbDNSRelay;
    this.llDNSRelay = llDNSRelay;
    this.tvDNSRelayDescription = tvDNSRelayDescription;
    this.tvDNSRelayName = tvDNSRelayName;
  }

  @Override
  @NonNull
  public LinearLayoutCompat getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemDnsRelayBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemDnsRelayBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_dns_relay, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemDnsRelayBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardDNSRelay;
      CardView cardDNSRelay = rootView.findViewById(id);
      if (cardDNSRelay == null) {
        break missingId;
      }

      id = R.id.chbDNSRelay;
      AppCompatCheckBox chbDNSRelay = rootView.findViewById(id);
      if (chbDNSRelay == null) {
        break missingId;
      }

      LinearLayoutCompat llDNSRelay = (LinearLayoutCompat) rootView;

      id = R.id.tvDNSRelayDescription;
      AppCompatTextView tvDNSRelayDescription = rootView.findViewById(id);
      if (tvDNSRelayDescription == null) {
        break missingId;
      }

      id = R.id.tvDNSRelayName;
      AppCompatTextView tvDNSRelayName = rootView.findViewById(id);
      if (tvDNSRelayName == null) {
        break missingId;
      }

      return new ItemDnsRelayBinding((LinearLayoutCompat) rootView, cardDNSRelay, chbDNSRelay,
          llDNSRelay, tvDNSRelayDescription, tvDNSRelayName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
