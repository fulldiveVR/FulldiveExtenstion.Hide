// Generated by view binder compiler. Do not edit!
package pan.alexander.tordnscrypt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import pan.alexander.tordnscrypt.R;

public final class FragmentShowLogBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final FrameLayout LogLayout;

  @NonNull
  public final FloatingActionButton floatingBtnClearLog;

  @NonNull
  public final ScrollView scrollViewDNSLog;

  @NonNull
  public final SwipeRefreshLayout swipeRefreshDNSQueries;

  @NonNull
  public final AppCompatTextView tvLogFile;

  private FragmentShowLogBinding(@NonNull FrameLayout rootView, @NonNull FrameLayout LogLayout,
      @NonNull FloatingActionButton floatingBtnClearLog, @NonNull ScrollView scrollViewDNSLog,
      @NonNull SwipeRefreshLayout swipeRefreshDNSQueries, @NonNull AppCompatTextView tvLogFile) {
    this.rootView = rootView;
    this.LogLayout = LogLayout;
    this.floatingBtnClearLog = floatingBtnClearLog;
    this.scrollViewDNSLog = scrollViewDNSLog;
    this.swipeRefreshDNSQueries = swipeRefreshDNSQueries;
    this.tvLogFile = tvLogFile;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentShowLogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentShowLogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_show_log, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentShowLogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      FrameLayout LogLayout = (FrameLayout) rootView;

      id = R.id.floatingBtnClearLog;
      FloatingActionButton floatingBtnClearLog = rootView.findViewById(id);
      if (floatingBtnClearLog == null) {
        break missingId;
      }

      id = R.id.scrollViewDNSLog;
      ScrollView scrollViewDNSLog = rootView.findViewById(id);
      if (scrollViewDNSLog == null) {
        break missingId;
      }

      id = R.id.swipeRefreshDNSQueries;
      SwipeRefreshLayout swipeRefreshDNSQueries = rootView.findViewById(id);
      if (swipeRefreshDNSQueries == null) {
        break missingId;
      }

      id = R.id.tvLogFile;
      AppCompatTextView tvLogFile = rootView.findViewById(id);
      if (tvLogFile == null) {
        break missingId;
      }

      return new FragmentShowLogBinding((FrameLayout) rootView, LogLayout, floatingBtnClearLog,
          scrollViewDNSLog, swipeRefreshDNSQueries, tvLogFile);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
